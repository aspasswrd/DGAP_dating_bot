from fileinput import filename

from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types.message import Message
from aiogram.filters import StateFilter
from aiogram.utils import keyboard

from .common import cmd_main_menu
from ..config import get_db_connection
from ..database.queries import *
from ..handlers.common import cmd_start
from ..keyboards.builders import inline_edit_profile_keyboard, edit_preferences_keyboard
from ..states.registration import Registration
from ..states.preferences import Preferences

from ..handlers.common import cmd_start

router = Router()

from ..config import bot, upload_image

from aiogram.types import BufferedInputFile, CallbackQuery, InputMediaPhoto, InlineKeyboardMarkup

@router.callback_query(F.data == 'profile')
async def show_profile(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    conn = None
    try:
        conn = await get_db_connection()
        user = await conn.fetchrow(SELECT_USER_QUERY, callback.from_user.id)

        if user:
            photos = await conn.fetch(SELECT_USER_PHOTO_QUERY, callback.from_user.id)

            response = (
                f"üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
                f"–ò–º—è: {user['name']}\n"
                f"–í–æ–∑—Ä–∞—Å—Ç: {user['age']}\n"
                f"–ü–æ–ª: {'–ú—É–∂—á–∏–Ω–∞' if user['is_male'] else '–ñ–µ–Ω—â–∏–Ω–∞'}\n"
                f"–ü–æ–∏—Å–∫: {user['min_age']}-{user['max_age']} –ª–µ—Ç, "
                f"—Ä–∞–¥–∏—É—Å {user['search_radius']} –∫–º\n"
            )

            if photos:
                media = InputMediaPhoto(
                    media=photos[0]['photo'],
                    caption=response,
                )

                await callback.message.edit_media(
                    media=media,
                    reply_markup=inline_edit_profile_keyboard
                )

                await callback.answer()
            else:
                await callback.message.answer(response)
                await conn.close()
                await callback.answer()

    except Exception as e:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è")
        print(f"Error: {e}")
        await conn.close()

    finally:
        if conn:
            await conn.close()

@router.callback_query(F.data == 'delete_profile')
async def delete_profile(callback: CallbackQuery):
    await callback.answer()
    conn = None
    try:
        conn = await get_db_connection()

        async with conn.transaction():
            # –ö–∞—Å–∫–∞–¥–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä—è REFERENCES CASCADE
            await conn.execute(
                DELETE_USER_QUERY,
                callback.from_user.id
            )

        await callback.message.answer(
            "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–ø–∏—à–∏ /start",
            reply_markup=types.ReplyKeyboardRemove(),
        )

    except Exception as e:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è")
        print(f"Error: {e}")

    finally:
        if conn:
            await conn.close()


@router.message(F.text == "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å")
async def create_profile(message: Message, state: FSMContext):
    await message.answer("–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=types.ReplyKeyboardRemove())
    await state.set_state(Registration.get_name)


@router.message(StateFilter(Registration.get_name))
async def process_name(message: Message, state: FSMContext):
    if len(message.text) > 50:
        await message.answer("–ò–º—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return

    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (14-100 –ª–µ—Ç):")
    await state.set_state(Registration.get_age)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑—Ä–∞—Å—Ç–∞
@router.message(StateFilter(Registration.get_age))
async def process_age(message: Message, state: FSMContext):
    try:
        age = int(message.text)
        if not 14 <= age <= 100:
            raise ValueError
    except ValueError:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 14 –¥–æ 100.")
        await process_age(message, state)
        return

    await state.update_data(age=age)

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="–ú—É–∂—á–∏–Ω–∞")],
            [types.KeyboardButton(text="–ñ–µ–Ω—â–∏–Ω–∞")]
        ],
        resize_keyboard=True
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª:", reply_markup=keyboard)
    await state.set_state(Registration.get_gender)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª–∞
@router.message(StateFilter(Registration.get_gender))
async def process_gender(message: Message, state: FSMContext):
    gender_mapping = {
        "–º—É–∂—á–∏–Ω–∞": True,
        "–∂–µ–Ω—â–∏–Ω–∞": False
    }

    is_male = gender_mapping.get(message.text.lower())
    if is_male is None:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!")
        return

    await state.update_data(is_male=is_male)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é:",
                         reply_markup=types.ReplyKeyboardRemove())
    await state.set_state(Registration.get_location)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
@router.message(StateFilter(Registration.get_location), F.location)
async def process_location(message: Message, state: FSMContext):
    location = message.location
    await state.update_data(
        longitude=location.longitude,
        latitude=location.latitude
    )
    await message.answer("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è:")
    await state.set_state(Registration.get_photo)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
@router.message(StateFilter(Registration.get_photo), F.photo)
async def process_photo(message: Message, state: FSMContext):
    await message.answer("–Ø –∏—Å–ø–æ–ª—å–∑—É—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ö–æ—Å—Ç —Ñ–æ—Ç–æ–∫, —Ç–∞–∫ —á—Ç–æ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å(")
    photo = message.photo[-1]

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –≤–∏–¥–µ
    photo_file = await bot.get_file(photo.file_id)
    photo_bytes = await bot.download_file(photo_file.file_path)

    image_url = await upload_image(photo_bytes)

    if image_url:
        await message.answer(f"–§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ.\nImgur –≥–æ–≤–Ω–æ.")

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()

    try:
        conn = await get_db_connection()

        async with conn.transaction():
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await conn.execute(INSERT_USER_QUERY,
                               message.from_user.id,
                               message.from_user.username,
                               data["name"],
                               data["is_male"],
                               data["age"],
                               f"POINT({data['longitude']} {data['latitude']})")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
            await conn.execute(INSERT_USER_PHOTO_QUERY,
                               message.from_user.id,
                               image_url)

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            await conn.execute(INSERT_USER_PREFERENCES_QUERY,
                               message.from_user.id,
                               data["age"] - 2 if data["age"] > 16 else 14,
                               data["age"] + 2,
                               10)

        await message.answer(
            "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n"
            f"–ò–º—è: {data['name']}\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
            f"–ü–æ–ª: {'–ú—É–∂—á–∏–Ω–∞' if data['is_male'] else '–ñ–µ–Ω—â–∏–Ω–∞'}"
        )
        await state.clear()
        await cmd_start(message, state)

    except Exception as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"Database error: {e}")

    finally:
        if conn:
            await conn.close()
        await state.clear()


@router.callback_query(F.data == "edit_preferences")
async def edit_preferences(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await state.set_state(Preferences.get_min_age)  # –°—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É —à–∞–≥—É
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (–Ω–µ –º–µ–Ω–µ–µ 14):")


@router.message(StateFilter(Preferences.get_min_age))
async def process_min_age(message: Message, state: FSMContext):
    try:
        min_age = int(message.text)
        if not 14 <= min_age <= 100:
            raise ValueError
        await state.update_data(min_age=min_age)
        await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (–¥–æ 100 –ª–µ—Ç):")
        await state.set_state(Preferences.get_max_age)
    except ValueError:
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 14 –¥–æ 100.")


@router.message(StateFilter(Preferences.get_max_age))
async def process_max_age(message: Message, state: FSMContext):
    data = await state.get_data()
    try:
        max_age = int(message.text)
        if max_age < data["min_age"] or max_age > 100:
            raise ValueError
        await state.update_data(max_age=max_age)
        await message.answer("–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ (–≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö):")
        await state.set_state(Preferences.get_radius)
    except ValueError:
        await message.answer(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç {data['min_age']} –¥–æ 100.")


@router.message(StateFilter(Preferences.get_radius))
async def process_radius(message: Message, state: FSMContext):
    try:
        radius = int(message.text)
        radius = min(radius, 20000)

        data = await state.get_data()
        conn = await get_db_connection()

        async with conn.transaction():
            await conn.execute(
                UPDATE_USER_PREFERENCES_QUERY,
                message.from_user.id,
                data["min_age"],
                data["max_age"],
                radius
            )

        await message.answer("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        await cmd_start(message, state)

    except Exception as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        print(f"Error: {e}")
    finally:
        await state.clear()
        if conn:
            await conn.close()